name: Release
run-name: Release (bump to ${{ inputs.bump_type }} version)

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: Select bump type.
        required: true
        default: patch
        type: choice
        options:
          - major
          - minor
          - patch

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

permissions:
  contents: read

jobs:
  parse-version:
    name: Parse version
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    outputs:
      version: ${{ steps.generate.outputs.new_version }}
      tag: v${{ steps.generate.outputs.new_version }}
      branch: releases/v${{ steps.generate.outputs.new_version }}
      message: "chore(release): bump to v${{ steps.generate.outputs.new_version }}"
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          ref: ${{ github.sha }}
          fetch-depth: 1

      - name: Generate new version
        id: generate
        env:
          bump_type: ${{ inputs.bump_type }}
        run: |
          version="$(cat package.json | jq -r '.version')"

          major="$(cut -d. -f1 <<< "$version")"
          minor="$(cut -d. -f2 <<< "$version")"
          patch="$(cut -d. -f3 <<< "$version")"

          if [[ "$bump_type" == 'major' ]]; then
            new_version="$((major + 1)).0.0"
          elif [[ "$bump_type" == 'minor' ]]; then
            new_version="${major}.$((minor + 1)).0"
          elif [[ "$bump_type" == 'patch' ]]; then
            new_version="${major}.${minor}.$((patch + 1))"
          fi

          if [[ -z "$new_version" ]]; then
            exit 1
          fi

          echo "new_version=${new_version}" >> $GITHUB_OUTPUT

  bump-version-update:
    name: Bump version (update)
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    needs:
      - parse-version
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          ref: ${{ github.sha }}
          fetch-depth: 1

      - name: Update package.json
        run: |
          jq '.version = "${{ needs.parse-version.outputs.version }}"' package.json > tmp
          mv tmp package.json

      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: bump-version-artifact
          path: |
            package.json

  bump-version-upload:
    name: Bump version (upload)
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    needs:
      - parse-version
      - bump-version-update
    steps:
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        id: app-token
        with:
          app-id: ${{ secrets.RELEASE_APP_ID }}
          private-key: ${{ secrets.RELEASE_PRIVATE_KEY }}

      - name: Get GitHub App User ID
        id: get-user-id
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          user_id="$(gh api '/users/${{ steps.app-token.outputs.app-slug }}[bot]' --jq '.id')"
          echo "user-id=${user_id}" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.app-token.outputs.token }}
          persist-credentials: false
          ref: ${{ github.sha }}
          fetch-depth: 0

      - name: Create branch
        run: |
          git switch -c ${{ needs.parse-version.outputs.branch }}

      - name: Download artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: bump-version-artifact

      - name: Commit and Push
        run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com'
          git remote set-url origin 'https://x-access-token:${{ steps.app-token.outputs.token }}@github.com/${{ github.repository }}'
          git add .
          git commit -m '${{ needs.parse-version.outputs.message }}'
          git push origin HEAD

  create-pr:
    name: Create PR
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    needs:
      - parse-version
      - bump-version-upload
    outputs:
      pr_number: ${{ steps.create-pr.outputs.pr_number }}
    steps:
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        id: app-token
        with:
          app-id: ${{ secrets.RELEASE_APP_ID }}
          private-key: ${{ secrets.RELEASE_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.app-token.outputs.token }}
          persist-credentials: false
          ref: ${{ needs.parse-version.outputs.branch }}
          fetch-depth: 0

      - name: Create PR
        id: create-pr
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          created_pr="$(
            gh pr create \
              --draft \
              --base ${{ github.ref_name }} \
              --head ${{ needs.parse-version.outputs.branch }} \
              --title '${{ needs.parse-version.outputs.message }}' \
              --body ''
          )"
          pr_number="$(awk -F '/' '/\/pull\/[0-9]+$/ {print $NF}' <<< "$created_pr")"
          echo "pr_number=${pr_number}" >> $GITHUB_OUTPUT

  merge-pr:
    name: Merge PR
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    needs:
      - create-pr
    steps:
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        id: app-token
        with:
          app-id: ${{ secrets.RELEASE_APP_ID }}
          private-key: ${{ secrets.RELEASE_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.app-token.outputs.token }}
          persist-credentials: false
          ref: ${{ github.sha }}
          fetch-depth: 1

      - name: Merge PR
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          gh pr checks ${{ needs.create-pr.outputs.pr_number }} --watch
          gh pr ready ${{ needs.create-pr.outputs.pr_number }}
          gh pr merge ${{ needs.create-pr.outputs.pr_number }} --squash --delete-branch --auto

  get-merge-commit:
    name: Get merge commit
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    needs:
      - create-pr
      - merge-pr
    outputs:
      merge_commit: ${{ steps.get-merge-commit.outputs.result }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      pull-requests: read
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          ref: ${{ github.sha }}
          fetch-depth: 1

      - name: Get merge commit
        uses: corrupt952/actions-retry-command@3f634a8c767d6fdde08095e3c3c4d42aa2d79bb3 # v1.0.7
        id: get-merge-commit
        with:
          command: gh pr view ${{ needs.create-pr.outputs.pr_number }} --json mergeCommit --template '{{ .mergeCommit.oid }}'
          working_directory: ${{ github.workspace }}
          max_attempts: 10
          retry_interval: 10

  create-release:
    name: Create Release
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    needs:
      - parse-version
      - get-merge-commit
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        id: app-token
        with:
          app-id: ${{ secrets.RELEASE_APP_ID }}
          private-key: ${{ secrets.RELEASE_PRIVATE_KEY }}

      - name: Get GitHub App User ID
        id: get-user-id
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          user_id="$(gh api '/users/${{ steps.app-token.outputs.app-slug }}[bot]' --jq '.id')"
          echo "user-id=${user_id}" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.app-token.outputs.token }}
          persist-credentials: false
          ref: ${{ needs.get-merge-commit.outputs.merge_commit }}
          fetch-depth: 0

      - name: Create tag
        run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com'
          git remote set-url origin 'https://x-access-token:${{ steps.app-token.outputs.token }}@github.com/${{ github.repository }}'
          git tag ${{ needs.parse-version.outputs.tag }} ${{ needs.get-merge-commit.outputs.merge_commit }}
          git push origin ${{ needs.parse-version.outputs.tag }}

      - name: Create Release
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          gh release create ${{ needs.parse-version.outputs.tag }} --generate-notes
